# configure.in file for X11-Basic   (c) Markus Hoffmann
# used by autoconf
#
AC_INIT([X11-Basic], [1.28], [kollo@users.sourceforge.net])
version=$PACKAGE_VERSION
vdate=`date`
vyear=`date +"%Y"`
# for debugging we want all warnings
regs=-Wall

AC_REVISION($Revision: 0.12 $)
AC_SUBST(version)
AC_CONFIG_HEADERS([config.h])
AH_TOP([
/* CONFIG.H (c) Markus Hoffmann  */

/* This file is part of X11BASIC, the basic interpreter for Unix/X
 * ============================================================
 * X11BASIC is free software and comes with NO WARRANTY - read the file
 * COPYING for details
 */
 
/* If X11-Basic for some reason will not compile on your system 
   you may want do uncomment some of the defines    */
     
])

#### Paths
if test "$prefix" = NONE
then
  case $host in
    *-linux-*)
      prefix=/usr
      AC_MSG_RESULT([using prefix $prefix])
      EXTRA_GCFLAGS="-pipe "
    ;;
    hppa1.1-hp-hpux11.00)
      EXTRA_CFLAGS='-O '
      EXTRA_LDFLAGS='-z '
    ;;
    *)
      prefix=$ac_default_prefix
    ;;
  esac
fi


# enable the arguments for different flavors of X11-Basic

AC_ARG_ENABLE(cryptography, AS_HELP_STRING([--enable-cryptography],
              [enable cryptographic features @<:@default=no@:>@]), [with_crypto=$enableval], [with_crypto=no])

AC_ARG_ENABLE(static, AS_HELP_STRING([--enable-static],
              [only produce static libraries @<:@default=no@:>@]), [with_static=$enableval], [with_static=no])

AC_ARG_ENABLE(smallram, AS_HELP_STRING([--enable-smallram],
              [make version siutable for systems with small RAM @<:@default=no@:>@]), [with_smallram=$enableval], [with_smallram=no])

AC_ARG_ENABLE(german, AS_HELP_STRING([--enable-german],
              [make german version  @<:@default=no@:>@]), [with_german=$enableval], [with_german=no])

AC_ARG_WITH(bluetooth, AS_HELP_STRING([--with-bluetooth],
              [support blutooth @<:@default=yes@:>@]), [with_bluetooth=$withval], [with_bluetooth=yes])

AC_ARG_WITH(mqtt, AS_HELP_STRING([--with-mqtt],
              [support mqtt @<:@default=no@:>@]), [with_mqtt=$withval], [with_mqtt=no])

AC_ARG_WITH(usb, AS_HELP_STRING([--with-usb],
              [support USB @<:@default=yes@:>@]), [with_usb=$withval], [with_usb=yes])

AC_ARG_WITH(readline, AS_HELP_STRING([--with-readline],
              [support readline library @<:@default=yes@:>@]), [with_readline=$withval], [with_readline=yes])

AC_ARG_WITH(framebuffer, AS_HELP_STRING([--with-framebuffer],
              [support framebuffer @<:@default=no@:>@]), [with_framebuffer=$withval], [with_framebuffer=no])

AC_ARG_WITH(sdl, AS_HELP_STRING([--with-sdl],
              [support SDL library @<:@default=no@:>@]), [with_sdl=$withval], [with_sdl=no])
	      
AC_ARG_WITH(x, AS_HELP_STRING([--with-x],
              [use the X Window System  @<:@default=yes@:>@]), [with_x=$withval], [with_x=yes])

echo
echo "Configuring X11-Basic with following features:"
echo "Install prefix:                 " $prefix
echo "Cryptographic features        = " $with_crypto
echo "Small RAM version             = " $with_smallram
echo "German version                = " $with_german
echo "Produce only static libraries = " $with_static
echo "Use X Window system           = " $with_x
echo "Use SDL library               = " $with_sdl
echo "Use framebuffer               = " $with_framebuffer
echo "Use readline library          = " $with_readline
echo "Support USB                   = " $with_usb
echo "Support bluetooth             = " $with_bluetooth
echo "Support mqtt                  = " $with_mqtt
echo

if test "n$with_sdl" = nno && test "n$with_x" = nno && test "n$with_framebuffer" = nno; then
cat <<'EOF'
WARNING: You seem to have specified no graphics engine! So a version of X11-Basic will be
produced, which only uses the commandline and no graphics at all. Please note that this version
will be incompatible in bytecode to other versions since the graphics commands are completely
taken out and will result in a syntax error. 

EOF
fi




if test "n$with_smallram" = nyes; then
def="$def -DSMALL_RAM"
fi
if test "n$with_framebuffer" = nyes; then
def="$def -DFRAMEBUFFER"
fi
if test "n$with_sdl" = nyes; then
def="$def -DUSE_SDL"
fi
if test "n$with_x" = nyes; then
def="$def -DUSE_X11"
fi
if test "n$with_german" = nyes; then
def="$def -DGERMAN"
fi



#### PROGRAMS
# Checks for programs.
AC_CHECK_PROG(X11BASICAT, xbasic, ok, no)
if test "n$X11BASICAT" = nok; then
cat <<'EOF'
You seem to have x11basic already installed ! But I'll continue the configuration
process. Testing X11-Basic Verison:
EOF
xbasic -e version
fi

AC_PROG_CC
AC_PROG_CC_STDC
# AC_PROG_INSTALL
AC_PROG_LN_S
AC_PROG_CPP

AC_ISC_POSIX
static=
if test "n$CC" != ngcc; then
cat <<'EOF'
Note: using gcc will improve the speed of X11-Basic significantly!
EOF
else
copt="-O3"
fi

AC_SYS_INTERPRETER
if test "n$interpval" = nno; then
cat <<'EOF'
Your System seems not to support starting scripts with a line of
     the form `#! /usr/bin/xbasic' to select the interpreter to use for the
     script. You will have to keep that in mind !
EOF
fi

#### LIBRARIES

if test "n$with_x" = nyes || test "n$with_sdl" = nyes; then
AC_PATH_XTRA

if test "x$no_x" = yes; then
	echo "Sorry, I can't find any trace of the X Window installation (X11) on your"
	echo "system! Please use --x-includes=DIR and --x-libraries=DIR if you have them."
	exit 1
fi
fi


AC_HEADER_DIRENT
AC_HEADER_STDC
AC_CHECK_HEADERS([sys/kd.h complex.h png.h jpeglib.h pty.h errno.h limits.h sys/file.h sys/param.h  sys/timeb.h utime.h])
AC_CHECK_HEADERS([fcntl.h inttypes.h malloc.h memory.h netdb.h netinet/in.h stddef.h stdint.h stdlib.h string.h strings.h sys/ioctl.h sys/socket.h sys/time.h termios.h unistd.h utmp.h])
AC_CHECK_HEADERS([regex.h])



# Checks for libraries.


if test "n$with_x" = nyes || test "n$with_sdl" = nyes; then
# `-lX11':
AC_CHECK_LIB([X11], [XOpenDisplay], [
xlibs="$xlibs -lX11"
AC_DEFINE(HAVE_X11,1,[X11lib])
])
fi


# `-ldl':
AC_CHECK_LIB([dl], [dlopen], [
libs="$libs -ldl"
AC_DEFINE(HAVE_LIBDL,1,[dllib])
AC_DEFINE(HAVE_DLOPEN,1,[dlopen in dllib])
])
# `-lm':
AC_CHECK_LIB([m], [sin], libs="$libs -lm")
AC_CHECK_LIB([m], [floor], AC_DEFINE(HAVE_FLOOR,1,[floor in Mathlib]))
AC_CHECK_LIB([m], [logb], AC_DEFINE(HAVE_LOGB,1,[logb in Mathlib]))
AC_CHECK_LIB([m], [sqrt], AC_DEFINE(HAVE_SQRT,1,[sqrt in Mathlib]))
AC_CHECK_LIB([m], [pow], AC_DEFINE(HAVE_POW,1,[pow in Mathlib]))
AC_CHECK_LIB([m], [expm1], AC_DEFINE(HAVE_EXPM1,1,[expm1 in Mathlib]))
AC_CHECK_LIB([m], [clog10], AC_DEFINE(HAVE_CLOG10,1,[clog10 in Mathlib]))
AC_CHECK_LIB([m], [cacos], AC_DEFINE(HAVE_CACOS,1,[cacos in Mathlib]))
AC_CHECK_LIB([m], [log1p], AC_DEFINE(HAVE_LOG1P,1,[log1p in Mathlib]))

# `-ltermcap':
#AC_CHECK_LIB([termcap], [main], libs="$libs -ltermcap")
# `-lncurses':
#AC_CHECK_LIB([ncurses], [main], libs="$libs -lncurses", [
  # `-lcurses':
#  AC_CHECK_LIB([curses], [main], libs="$libs -lcurses")
#])
AC_CHECK_LIB([pthread], [pthread_create], libs="$libs -lpthread")

# `-lasound':
AC_CHECK_LIB([asound], [snd_pcm_recover], [
libs="$libs -lasound"
AC_DEFINE(HAVE_ALSA,1,[snd_pcm_recover in asound])
],,[$libs])

# `-lpng':
#AC_CHECK_LIB([png], [png_create_read_struct], [
#libs="$libs -lpng"
#AC_DEFINE(HAVE_PNG,1,[png_create_read_struct in png])
#],,[$libs])

# `-ljpeg':
#AC_CHECK_LIB([jpeg], [jpeg_read_header], [
#libs="$libs -ljpeg"
#AC_DEFINE(HAVE_JPEG,1,[jpeg_read_header in jpeg])
#],,[$libs])

# `-lfreetype':
AC_CHECK_LIB([freetype], [FT_Init_FreeType], [
libs="$libs -lfreetype"
AC_DEFINE(HAVE_FREETYPE,1,[FT_Init_FreeType in freetype])
],,[$libs])

# `-lutil':
AC_CHECK_LIB([util], [forkpty], [
libs="$libs -lutil"
AC_DEFINE(HAVE_FORKPTY,1,[forkpty in libutil])
],,[$libs])

if test "n$with_readline" = nyes; then
# `-lreadline':
AC_CHECK_LIB([readline], [readline], [
libs="$libs -lreadline"
AC_DEFINE(HAVE_READLINE,1,[readline in readline])
],,[$libs])
fi

# `-llapack':
AC_CHECK_LIB([lapack], [dgelss_], [
libs="$libs -llapack"
AC_DEFINE(HAVE_LAPACK,1,[dgelss_ in lapack])
],,[$libs])

# `-lgmp':
AC_CHECK_LIB([gmp], [__gmpz_init], [
libs="$libs -lgmp"
AC_DEFINE(HAVE_GMP,1,[mpz_init in gmp])
],,[$libs])

# `-lgmp':
AC_CHECK_LIB([gmp], [__gmpz_primorial_ui], [
libs="$libs -lgmp"
AC_DEFINE(HAVE_PRIMORIAL_UI,1,[mpz_primorial_ui in gmp])
],,[$libs])


# `-lfftw':
AC_CHECK_LIB([fftw], [fftw_make_plan], [
libs="$libs -lfftw"
AC_DEFINE(HAVE_FFTW,1,[fftw_make_plan in fftw])
],,[$libs])

# `-lrfftw':
AC_CHECK_LIB([rfftw], [rfftw_create_plan], [
libs="-lrfftw $libs"
AC_DEFINE(HAVE_RFFTW,1,[rfftw_create_plan in rfftw])
],,[$libs])


# `-wiringPi':
AC_CHECK_LIB([wiringPi], [wiringPiSetup], [
libs="-lwiringPi $libs"
AC_DEFINE(HAVE_WIRINGPI,1,[wiringPiSetup in wiringPi])
],,[$libs])





if test "n$with_usb" = nyes; then
# `-lusb':
AC_CHECK_LIB([usb], [usb_open], [
libs="$libs -lusb"
AC_DEFINE(HAVE_USB,1,[usb_open in lusb])
],,[$libs])
# `-lusb-1.0':
#AC_CHECK_LIB([usb-1.0], [libusb_control_transfer], [
#libs="$libs -lusb-1.0"
#AC_DEFINE(HAVE_LIBUSB,1,[libusb_control_transfer in lusb-1.0])
#],,[$libs])
fi

if test "n$with_bluetooth" = nyes; then
# `-lbluetooth':
AC_CHECK_LIB([bluetooth], [hci_get_route], [
libs="$libs -lbluetooth"
AC_DEFINE(HAVE_BLUETOOTH,1,[hci_get_route in lbluetooth])
],,[$libs])
fi

if test "n$with_mqtt" = nyes; then
# `-lpaho-mqtt3c':
AC_CHECK_LIB([paho-mqtt3c], [MQTTClient_create], [
libs="$libs -lpaho-mqtt3c"
AC_DEFINE(HAVE_MQTT,1,[MQTTClient_create in paho-mqtt3c])
],,[$libs])
fi

if test "n$with_crypto" = nyes; then
# `-lgcrypt':
AC_CHECK_LIB([gcrypt], [gcry_check_version], [
libs="$libs -lgcrypt"
AC_DEFINE(HAVE_GCRYPT,1,[gcry_check_version in lgcrypt])
],,[$libs])
fi

if test "n$with_sdl" = nyes; then
 # `-lSDL':
AC_CHECK_LIB([SDL], [SDL_MapRGB], [
libs="$libs -lSDL"
AC_DEFINE(HAVE_SDL,1,[Simple Direct Media present])
])
AC_CHECK_LIB([SDL_gfx], [hlineRGBA], [
libs="$libs -lSDL_gfx"
AC_DEFINE(HAVE_SDL_GFX,1,[Simple Direct Media GFX])
])
AC_CHECK_LIB([SDL_ttf], [TTF_Init], [
libs="$libs -lSDL_ttf"
AC_DEFINE(HAVE_SDL_TTF,1,[Simple Direct Media TTF])
])
fi

# `-lx11basic':
#AC_CHECK_LIB([x11basic], [programmlauf],,,[$X_LIBS $libs -$xlibs])
# `-ltine':
#AC_CHECK_LIB([tine], [_SystemCycle],AC_DEFINE(HAVE_TINE,1,[_SystemCycle in dynamical TINE lib]),,[ -lm])
# `-lDOOCSclient':
#AC_CHECK_LIB([DOOCSclient], [eq_int],AC_DEFINE(HAVE_DOOCS,1,[eq_int in dynamical DOOCS lib]),,[ -lm -lpthread -ltine])
# `-lvgagl -lvga':
#AC_CHECK_LIB([vga], [main],vgalibs="-lvgagl -lvga",,[$VGA_LIBS])

AC_SUBST(inc)
AC_SUBST(X_CFLAGS)
AC_SUBST(X_LIBS)
AC_SUBST(X_EXTRA_LIBS)
AC_SUBST(X_PRE_LIBS)

AC_TRY_LINK([#include <stdlib.h>],[atexit(exit);],[echo "atexit() found"],[
AC_TRY_LINK([#include <stdlib.h>],[on_exit(main);],[echo "using on_exit()"
def="$def -DUSE_ON_EXIT=1"],
def="$def -DNO_ATEXIT=1"
echo "You need either atexit() or on_exit() for X11Basic to work correctly!")])

#### Sizes

AC_CHECK_SIZEOF([void *])


#### SYSTEM
echo "Running config.guess to determine your system type..."
t=`./config.guess`
echo 'You seem to have a `'$t"'"
endian=dunno
small=0
conf="config/generic.h"
case $t in
sparc-sun-sunos*)
	echo "Congratulations! "
	AC_DEFINE(IS_BIG_ENDIAN,1,[System is big or little endian])

if test "n$CC" = ngcc; then
	regs=
else
	regs=
	copt="-O4"
fi
	;;
sparc-sun-solaris*)
	echo "A Sun with Solaris 2.x"
	AC_DEFINE(IS_BIG_ENDIAN,1,[System is big or little endian])
	AC_DEFINE(SMALL_RAM,1,[Small Memory layout])

if test "n$CC" = ngcc; then
	regs=
else
	regs=
	copt="-O4"
fi
	;;
x86*64-apple-*)
	echo 'Oh, a Macintosh... Very nice! :-)'
	regs=
	copt="-O3"
	;;
x86*64-*-linux)
	echo 'Oh, a 64bit Linux box... A challenge... :-)'
	regs="-fno-omit-frame-pointer"
	copt="-O3"
	;;
x86*64-*-linux-*)
	echo 'Oh, a 64bit Linux box... A challenge... :-)'
	regs="-fno-omit-frame-pointer"
	copt="-O3"
	;;
i*86-*-linux)
	echo 'Oh, a 80x86-based Linux box... Very nice! :-)'
	regs="-fno-omit-frame-pointer"
	copt="-O3"
	;;
i*86-*-linux-*)
	echo 'Oh, a 80x86-based Linux box... Very nice! :-)'
	regs="-fno-omit-frame-pointer"
	copt="-O3"
	;;
armv*-*-linux-*)
	echo 'Oh no, an arm-based Linux box... Maybe the Raspberry PI. My condolences! :-)'
	regs=
	;;
i*86-*bsd*)
 	echo 'A 80x86-based BSD box...'
 	regs=" -ffixed-ebx -ffixed-ebp"
 	copt="-O3"
 	;;
mips-sgi-irix*)
	echo 'Wow, an SGI!'
	AC_DEFINE(IS_BIG_ENDIAN,1,[System is big or little endian])
	defs="$defs -D_BSD_SIGNALS"
	xtra="$xtra -laudio -lm"
if test "n$CC" = ngcc; then
	regs=
else
	regs=
	copt="-O2"
fi
	;;
mips-dec-ultrix*)
	echo "A DECstation..."
	AC_DEFINE(IS_BIG_ENDIAN,1,[System is big or little endian])

if test "n$CC" = ngcc; then
	regs=
else
	regs=
	copt="-O2"
fi
	;;
hppa*-hp-hpux)
	echo "A HP with HP-UX and PA-RISC processor"
	AC_DEFINE(IS_BIG_ENDIAN,1,[System is big or little endian])
	AC_DEFINE(signed,,[signed not known to compiler])
if test "n$CC" = ngcc; then
	regs=
	static="-static"
else
	echo "You need gcc on HP-UX, sorry!"
	exit 1
fi
	;;
alpha-dec-osf*)
	echo "Wow, an Alpha/OSF!"
	xtra="$xtra -ldnet_stub -lots"
	AC_DEFINE(TIMEVAL_WORKAROUND,,[Timeval workaround])

if test "n$CC" = ngcc; then
	regs=
else
	regs=
	copt="-migrate -non_shared -std1 -O5 -ifo -om"
fi
	;;
m68k-next-bsd)
	echo "A NeXTStation with NEXTSTEP and MC680x0 processor"
	AC_DEFINE(IS_BIG_ENDIAN,1,[System is big or little endian])
	
if test "n$CC" = ngcc; then
	regs="-posix "
else
	regs="-posix"
	copt="-O3"
fi
	;;
*)	echo "X11Basic has not been ported to this system ($t), please let me"
	echo "know if you can compile and run it successfully!"
	echo "Determining this system's endianness and short/int sizes..."
if test "n$CC" = ngcc; then
	regs=
else
	regs=
	copt="-O2"
fi
cat > conftest.c << EOF
#include <stdio.h>
main(foo)
{
	int x;
	if (sizeof(short) != 2 || sizeof(int) != 4) return 1;
	x = 0x12345678;
	switch (*(char *)&x)
	{
	case 0x12:	puts ("big"); break;
	case 0x78:	puts ("little"); break;
	default:	puts ("dunno"); break;
	}
	return 0;
}
EOF
	$CC -o conftest conftest.c
	if endian=`./conftest`; then
		echo "Sizes are OK..."
	else
		echo "Sorry, sizeof(short),sizeof(int) must be 2,4!"
		exit 1
	fi
	rm -f ./conftest
case $endian in 
	big)	echo "You're using a big-endian processor, very good!";;
	little)	echo "You're using a little-endian processor, too bad...";;
	*)	
	echo "Your machine seems to have a weird byte-ordering format, Hm..."
	;;
esac
esac




# Checks for typedefs, structures, and compiler characteristics.
AC_C_CONST
AC_TYPE_OFF_T
AC_TYPE_SIZE_T
AC_STRUCT_ST_BLOCKS
AC_HEADER_TIME
AC_STRUCT_TM

# Checks for library functions.
AC_FUNC_ERROR_AT_LINE
AC_FUNC_FNMATCH
AC_FUNC_FORK
AC_PROG_GCC_TRADITIONAL
AC_FUNC_MALLOC
AC_FUNC_MEMCMP
AC_FUNC_MMAP
AC_FUNC_REALLOC
AC_TYPE_SIGNAL
AC_FUNC_STAT
AC_FUNC_UTIME_NULL
AC_CHECK_FUNCS([nanosleep inotify_init memfrob utime execvp execvpe futimes futimens utimensat])
AC_CHECK_FUNCS([alarm atexit bzero dup2 getcwd gethostbyname gettimeofday]) 
AC_CHECK_FUNCS([inet_ntoa localtime_r memmove memset mkdir munmap rmdir select]) 
AC_CHECK_FUNCS([socket strchr strdup strerror strstr backtrace])



# Versioning
AC_DEFINE_UNQUOTED(VERSION,"$version",[Version of actual implementation])
AC_DEFINE_UNQUOTED(VERSION_DATE,"$vdate",[Date of actual compilation])
AC_DEFINE_UNQUOTED(VERSION_YEAR,"$vyear",[Year of actual compilation])
AC_DEFINE_UNQUOTED(TCC_COMPILE_FLAGS,"$regs $libs",[Compilation options for tcc])

#libs=$LIBS
AC_SUBST(mandir)
AC_SUBST(regs)
AC_SUBST(def)
AC_SUBST(libs)
AC_SUBST(xlibs)
AC_SUBST(xtra)
AC_SUBST(copt)
AC_SUBST(static)
AC_OUTPUT([examples/compiler/xbc.bas Makefile])
